/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Courier from "../../..";
export declare namespace Bulk {
    interface Options {
        environment?: core.Supplier<environments.CourierEnvironment | string>;
        authorizationToken?: core.Supplier<core.BearerToken | undefined>;
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
    interface IdempotentRequestOptions extends RequestOptions {
        idempotencyKey?: string | undefined;
        idempotencyExpiry?: number | undefined;
    }
}
export declare class Bulk {
    protected readonly _options: Bulk.Options;
    constructor(_options?: Bulk.Options);
    /**
     * @throws {@link Courier.BadRequestError}
     */
    createJob(request: Courier.BulkCreateJobParams, requestOptions?: Bulk.IdempotentRequestOptions): Promise<Courier.BulkCreateJobResponse>;
    /**
     * Ingest user data into a Bulk Job
     */
    ingestUsers(jobId: string, request: Courier.BulkIngestUsersParams, requestOptions?: Bulk.IdempotentRequestOptions): Promise<void>;
    /**
     * Run a bulk job
     * @throws {@link Courier.BadRequestError}
     */
    runJob(jobId: string, requestOptions?: Bulk.IdempotentRequestOptions): Promise<void>;
    /**
     * Get a bulk job
     * @throws {@link Courier.BadRequestError}
     */
    getJob(jobId: string, requestOptions?: Bulk.RequestOptions): Promise<Courier.BulkGetJobResponse>;
    /**
     * Get Bulk Job Users
     * @throws {@link Courier.BadRequestError}
     */
    getUsers(jobId: string, requestOptions?: Bulk.RequestOptions): Promise<Courier.BulkGetJobUsersResponse>;
    protected _getAuthorizationHeader(): Promise<string>;
}
