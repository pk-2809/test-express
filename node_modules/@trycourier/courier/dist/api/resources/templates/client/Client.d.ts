/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as Courier from "../../..";
export declare namespace Templates {
    interface Options {
        environment?: core.Supplier<environments.CourierEnvironment | string>;
        authorizationToken?: core.Supplier<core.BearerToken | undefined>;
        fetcher?: core.FetchFunction;
    }
    interface RequestOptions {
        timeoutInSeconds?: number;
        maxRetries?: number;
    }
}
export declare class Templates {
    protected readonly _options: Templates.Options;
    constructor(_options?: Templates.Options);
    /**
     * Returns a list of notification templates
     */
    list(request?: Courier.ListTemplatesRequest, requestOptions?: Templates.RequestOptions): Promise<Courier.ListTemplatesResponse>;
    protected _getAuthorizationHeader(): Promise<string>;
}
